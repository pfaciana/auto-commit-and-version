name: Auto Commit and Version
description: Checks for changes to repo, commits them and bumps config json version
inputs:
  config-json:
    description: path the config json file (if not package.json in the root)
    required: false
  release-type:
    description: The type of release to do (patch, minor, major)
    required: false
    default: patch
  commit-message:
    description: Custom message for the commit. Use {version} to include the new version dynamically
    required: false
    default: ''
  exclude-files:
    description: Patterns to exclude files from git status check (defaults to common lockfiles)
    required: false
    default: ':!*.lock :!*.lockfile :!*.lock[A-Za-z0-9] :!*[.-]lock.* :!*.snapshot :!*.resolved :!*go.sum'
  clean-excluded-files:
    description: If excluded files are the only change, should they be cleaned up?
    required: false
    default: yes
outputs:
  changes-made:
    description: Boolean-like result if changes were committed
    value: ${{ steps.commit_changes.outputs.changes-made || '' }}
runs:
  using: composite
  steps:
    - name: Dump github context
      if: env.DEBUG_MODE == 1
      run: echo "$GITHUB_CONTEXT"
      shell: bash
      env:
        GITHUB_CONTEXT: ${{ toJson(github) }}

    - name: Node, npm versions, and install
      run: |
        node --version
        npm --version
        npm install
        rm package-lock.json
      shell: bash
      working-directory: ${{ github.action_path }}

    - name: Commit changes
      id: commit_changes
      run: node ${{ env.DEBUG_MODE == '1' && '--inspect-brk=9229' || '' }} ${{ github.action_path }}/index.js
      shell: bash
      env:
        RELEASE_TYPE: ${{ inputs.release-type }}
        CONFIG_JSON: ${{ inputs.config-json }}
        COMMIT_MESSAGE: ${{ inputs.commit-message }}
        EXCLUDE_FILES: ${{ inputs.exclude-files }}
        CLEAN_EXCLUDED_FILES: ${{ inputs.clean-excluded-files }}
